parameters:
- name: stageName
  default: ''
- name: environment
  default: ''
- name: variableGroupName
  default: ''
- name: workingDirectory
  default: ''
- name: serviceConnection
  default: ''  

stages:
  - stage: ${{ parameters.stageName }}
    displayName: ${{ parameters.stageName }}

    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: ${{ parameters.environment }}
      variables:
      - group: ${{ parameters.variableGroupName }}
      pool:
        vmImage: ubuntu-latest
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: infrastructure

            - task: AzureCLI@2
              displayName: 'az group deployment create'
              inputs:
                azureSubscription: ${{ parameters.serviceConnection }}
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  DEPLOYMENT_NAME="aml-infra-deploy-$(date '+%F_%H_%M_%S')"
                  echo "Using deployment name $DEPLOYMENT_NAME"
                  az deployment group create -g "$(resourceGroupName)" -n "$DEPLOYMENT_NAME" --template-file "$(Pipeline.Workspace)/infrastructure/azureml.bicep" --parameters appInsightsName=$(appInsightsName) computeInstanceName=$(computeInstanceName) computeInstanceSku=$(computeInstanceSku) containerRegistryName=$(containerRegistryName) createMlCluster=$(createMlCluster) createMlComputeInstance=$(createMlComputeInstance) keyVaultAccessPolicyTargetObjectId=$(keyVaultAccessPolicyTargetObjectId) keyVaultName=$(keyVaultName) mlClusterMaxNodeCount=$(mlClusterMaxNodeCount) mlClusterMinNodeCount=$(mlClusterMinNodeCount) mlClusterName=$(mlClusterName) mlClusterSku=$(mlClusterSku) mlComputeAssignedUser=$(mlComputeAssignedUser) mlWorkspaceName=$(mlWorkspaceName) storageAccountName=$(storageAccountName)            
